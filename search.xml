<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[JS进阶以及重要知识点]]></title>
      <url>http://carryguan.com/2016/08/05/js%E9%87%8D%E8%A6%81%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2377897-2a12c8caef6e4f37.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>(原谅博主carry比较变态，在博文加了歌曲，不想听歌的小胖友们可以到博文底部关闭 ^~^)</p>
<h2 id="前端进阶-（以下是豪大大的干货）"><a href="#前端进阶-（以下是豪大大的干货）" class="headerlink" title="前端进阶: （以下是豪大大的干货）"></a>前端进阶: （以下是豪大大的干货）</h2><p><a href="http://www.cnblogs.com/jikey/p/3600308.html" target="_blank" rel="external">第一阶段</a><br><a href="http://www.cnblogs.com/jikey/p/3601666.html" target="_blank" rel="external">第二阶段</a><br><a href="http://www.cnblogs.com/jikey/p/3604459.html" target="_blank" rel="external">第三阶段</a><br><a href="http://www.cnblogs.com/jikey/p/3607133.html" target="_blank" rel="external">第四阶段</a><br><a href="http://www.cnblogs.com/jikey/p/3611394.html" target="_blank" rel="external">第五阶段</a><br><a href="http://www.cnblogs.com/jikey/p/3632392.html" target="_blank" rel="external">第六阶段</a><br><a id="more"></a></p>
<hr>
<p>本文目前依据是菜鸟教程：<br><a href="http://www.runoob.com/js/js-functions.html" target="_blank" rel="external">JS菜鸟</a><br><a href="http://www.w3school.com.cn/js/index.asp" target="_blank" rel="external">JSw3c</a></p>
<hr>
<h2 id="JS基本编程语法"><a href="#JS基本编程语法" class="headerlink" title="JS基本编程语法"></a>JS基本编程语法</h2><p>变量<br>运算<br>流程控制<br>数组<br>调用函数<br>自定义函数<br>自定义对象<br>string对象原型(prototype)<br>this事件<br>json</p>
<hr>
<h2 id="JS函数"><a href="#JS函数" class="headerlink" title="JS函数"></a>JS函数</h2><p>函数定义<br>函数调用<br>函数的参数<br>闭包</p>
<hr>
<h2 id="JS-HTML-DOM"><a href="#JS-HTML-DOM" class="headerlink" title="JS HTML DOM"></a>JS HTML DOM</h2><p>目前来看都要</p>
<hr>
<h2 id="JS高级教程"><a href="#JS高级教程" class="headerlink" title="JS高级教程"></a>JS高级教程</h2><p>string,prototype<br>array<br>regExp<br>Boolean</p>
<hr>
<p>js继承(call,prototype,apply)//红皮书第六章<br>js的执行顺序<br>js事件机制(委托，绑定，监听，冒泡和阻止冒泡，兼容性)//红皮书13章<br>了解ajax的xmlhttprequest及其创建方法(多浏览器兼容)，跨域，明白其工作原理，http协议(get,post;如何传递参数，设置cookie)</p>
<hr>
<h2 id="前端学习计划推荐："><a href="#前端学习计划推荐：" class="headerlink" title="前端学习计划推荐："></a>前端学习计划推荐：</h2><blockquote>
<p>以下都是我从知乎里面找到的干货<br><img src="http://upload-images.jianshu.io/upload_images/2377897-e5c3d5a2eed28410.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</blockquote>
<p>计算机行业很多都符合82定律，也就是20%的东西的使用频率占到80%，所以很适合囫囵吞枣，我们的重点就是把这20%学起来，而首先要做的就是把这20%的东西找出来。<br>在我看来前端这20%的东西大概就是常用的html标签，css的盒子模型，基本的原生js，以及熟练使用jquery，ajax，常见浏览器的兼容。<br>拿下这些东西意义非凡，一方面证明你适合做前端这份工作，另一方面这些技能能让你找到一份工作。让你能够从容地去学习剩下的80%。<br>总之就是专心对付最重要的东西，那些什么less、sass、angular这类的东西，当你把我之前说的基础打好之后，学习起来畅通无阻，随学随用。<br>最后我觉得最难的就是实践，只有实践才能学到真正的技术，新人很难参与一些有价值有意义的项目，没有这些项目又很难成长，所以自己有项目可参与应该珍惜，没项目应该多造一些有价值的轮子。</p>
<p>1.html的语法、格式，常用的标签极其作用，理解标签的嵌套，学习使用firefox+firebug或者chrom的调试工具，能够使用这些工具调试html、css、js、断点调试、抓包</p>
<p>2.如何引入css、js（有多少种方法，各种方法有什么区别），理解id、class属性的区别，学会css的常用选择器，理解盒子模型（padding，margin，border，width，height，），css坐标系，css布局（position的absolute、relative 、fixed、static），css浮动（float：left、right ）和清除浮动（clear）,display:inline、block、inline-block、flex</p>
<p>3.js的执行顺序，基本的编程基础（变量、运算、流程控制、数组、调用函数、自定义函数、对象）、json、js的dom操作、js的事件机制（委托、绑定、监听，冒泡和阻止冒泡，兼容性），了解ajax的xmlhttprequest及其创建方法（多浏览器兼容）、跨域，明白其工作原理，评论里有朋友说http协议，确实是我疏忽，在学习ajax这部分免不了需要懂点http协议，比如什么是get和post，这两种如何传递参数，设置cookie等</p>
<p>4、使用jquery解放你的开发工作，学会jq选择器，修改属性、监听事件、修改css，学会写jquery插件。这一步我觉得可以和第3步穿插学习</p>
<p>5、搭建服务器，弄个傻瓜服务器比如wamp，phpstudy等软件，可以一键建立一个apache+php+mysql的服务器，前期可以把你的静态页发布到本地服务器，使用本地服务器配合ajax学习。</p>
<p>6、学点服务器端，建议php+mysql  (博主学的是nodejs+mysql)<br>服务器端脚本其实很简单，总结起来就是4个东西：SESSION、COOKIE、Request、Response，结合http协议理解如何从Request取得数据，经过处理后Response给客户端。这就是整个过程。<br>至于mysql也就是基本的sql语句。如何使用php进行CURD操作。这块其实很难总结，基本上以实现业务为主。</p>
<p>7、来点框架，理解MVC模式、推荐个比较流行的MVC框架：ThinkPHP，简洁好用不解释，国人弄的，文档和例子什么的非常丰富。</p>
<hr>
<h2 id="博主感想"><a href="#博主感想" class="headerlink" title="博主感想"></a>博主感想</h2><p>希望有更多小胖友提出宝贵意见,若有关于前端的问题，或者关于大学方面的感想可以私聊我(^~^)：</p>
<p><a href="https://github.com/sunningcarryhaha" target="_blank" rel="external">github</a><br><a href="https://www.zhihu.com/people/guan-kai-li-88" target="_blank" rel="external">知乎</a><br><a href="http://www.jianshu.com/users/0293a04839f0/latest_articles" target="_blank" rel="external">简书</a><br><a href="http://weibo.com/u/5048785433/home?wvr=5" target="_blank" rel="external">微博</a></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=32737469&auto=1&height=66"></iframe>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mysql-sql语法(入门)]]></title>
      <url>http://carryguan.com/2016/07/21/mysql%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/005vGbJ7jw1f671ikpgnhj30s20as0v3.jpg" alt="young"></p>
<ul>
<li>mysql-sql 语句  </li>
<li>字符集选utf-8</li>
<li>我需要学增删改查, 事物, 联合</li>
</ul>
<hr>
<h2 id="启动数据库"><a href="#启动数据库" class="headerlink" title="启动数据库"></a>启动数据库</h2><pre><code>
mysql -u root -p（root是用户名）
</code></pre>

<h2 id="查看数据库（所有）"><a href="#查看数据库（所有）" class="headerlink" title="查看数据库（所有）"></a>查看数据库（所有）</h2><pre><code>
show databases
</code></pre>
<a id="more"></a>

## 进入数据库
<pre><code>
use one ;
</code></pre>

<h2 id="展示当前数据库的所有表"><a href="#展示当前数据库的所有表" class="headerlink" title="展示当前数据库的所有表"></a>展示当前数据库的所有表</h2><pre><code>
show tables;
</code></pre>

<h2 id="创建个名为user的表的结构"><a href="#创建个名为user的表的结构" class="headerlink" title="创建个名为user的表的结构"></a>创建个名为user的表的结构</h2><pre><code>
create table user(
id int,
name  varchar(30),
pass varchar(30)
);（字符串长度最长是30）
</code></pre>

<h2 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h2><pre><code>
desc user; 
</code></pre>

<h2 id="查看数据从表里面"><a href="#查看数据从表里面" class="headerlink" title="查看数据从表里面"></a>查看数据从表里面</h2><pre><code>
select * from user;
</code></pre>

<h2 id="insert-增（我可以随意增加，插入数据到表中）"><a href="#insert-增（我可以随意增加，插入数据到表中）" class="headerlink" title="insert 增（我可以随意增加，插入数据到表中）"></a>insert 增（我可以随意增加，插入数据到表中）</h2><pre><code>
 insert into table(ct1,ct2,ct3) values(num,"str","str")
 insert into user(id,name,pass) values(1,"leiwei","123")
</code></pre>

<h2 id="形成了下表"><a href="#形成了下表" class="headerlink" title="形成了下表"></a>形成了下表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from user;</span><br><span class="line">+------+-----------+------+</span><br><span class="line">| id   | name      | pass |</span><br><span class="line">+------+-----------+------+</span><br><span class="line">|    1 | leiwei    | 123  |</span><br><span class="line">|    2 | yujie     | 13   |</span><br><span class="line">|    3 | qiancheng | 456  |</span><br><span class="line">+------+-----------+------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<h2 id="select-查（我可以随意查找-select-from-table-where…）"><a href="#select-查（我可以随意查找-select-from-table-where…）" class="headerlink" title="select 查（我可以随意查找 select from table where…）"></a>select 查（我可以随意查找 select from table where…）</h2><pre><code>
select * from user where id=2;
select * from user where pass=13;
</code></pre>

<h2 id="select-like-子段（-我可以随意选取子字段-）"><a href="#select-like-子段（-我可以随意选取子字段-）" class="headerlink" title="select like 子段（ 我可以随意选取子字段 ）"></a>select like 子段（ 我可以随意选取子字段 ）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select * from user where name like &apos;%carry%&apos;;//选取中间含有carry字段的数据</span><br><span class="line">+------+----------+------+</span><br><span class="line">| id   | name     | pass |</span><br><span class="line">+------+----------+------+</span><br><span class="line">|    5 | carryone | 123  |</span><br><span class="line">|    2 | carry    | 571  |</span><br><span class="line">+------+----------+------+</span><br></pre></td></tr></table></figure>
<h3 id="选取以one结束的字段"><a href="#选取以one结束的字段" class="headerlink" title="选取以one结束的字段"></a>选取以one结束的字段</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select * from user where name like &apos;%one&apos;;//</span><br><span class="line">+------+----------+------+</span><br><span class="line">| id   | name     | pass |</span><br><span class="line">+------+----------+------+</span><br><span class="line">|    5 | carryone | 123  |</span><br><span class="line">+------+----------+------+</span><br></pre></td></tr></table></figure>
<h2 id="select-order-by（排序我们可以随意排序数据）"><a href="#select-order-by（排序我们可以随意排序数据）" class="headerlink" title="select order by（排序我们可以随意排序数据）"></a>select order by（排序我们可以随意排序数据）</h2><pre><code>
        select * from user order by name; //默认是升序  
         select * from user order by id desc;//desc为降序排列
</code></pre>

<h2 id="delete-删-（我可以随意删除-delete-from-table-where…）"><a href="#delete-删-（我可以随意删除-delete-from-table-where…）" class="headerlink" title="delete 删 （我可以随意删除 delete from table where…）"></a>delete 删 （我可以随意删除 delete from table where…）</h2><pre><code>
delete from user where name="yujie";
delete from user where id=3;
</code></pre>

<h2 id="update-我可以随意更改-update-user-set-charct-where-…"><a href="#update-我可以随意更改-update-user-set-charct-where-…" class="headerlink" title="update (我可以随意更改 update user set charct where ….)"></a>update (我可以随意更改 update user set charct where ….)</h2><p><pre><code><br>update user set name=”billin” where id=1;<br>update user set id=5 where name=”billin”;<br></code></pre></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=5179544&auto=1&height=66"></iframe>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Github预览demo]]></title>
      <url>http://carryguan.com/2016/07/15/github%E9%A2%84%E8%A7%88demo/</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2377897-fc915701514c515c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="young"></p>
<ul>
<li>问题所在？</li>
<li>解决办法？</li>
<li>博主建议？<br>(原谅博主carry比较变态，在博文加了歌曲，不想听歌的小胖友们可以到博文底部关闭 ^~^)<br>图片无法加载可以点击<a href="http://www.jianshu.com/p/75e30889e70a" target="_blank" rel="external">图片爸爸</a></li>
</ul>
<hr>
<h2 id="一：问题的所在"><a href="#一：问题的所在" class="headerlink" title="一：问题的所在"></a>一：问题的所在</h2><p>相信很多小胖友们在把自己的网页上传到github仓库中，都会有一个疑问？是什么呢？<br>那就是上传完网页后，自己的仓库中是这个样子的<img src="http://upload-images.jianshu.io/upload_images/2377897-44104fdfe222e566.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">，点进去相应的html文件是出来的是代码<img src="http://upload-images.jianshu.io/upload_images/2377897-933438f6e1551351.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>可是自己想在网上看到自己仓库中的demo(也就是网页的效果)<br>下面博猪为您解答 (^~^)</p>
<hr>
<a id="more"></a>
<h2 id="二：解决问题的方法"><a href="#二：解决问题的方法" class="headerlink" title="二：解决问题的方法"></a>二：解决问题的方法</h2><h4 id="1-使用-Githubpages"><a href="#1-使用-Githubpages" class="headerlink" title="1: 使用 Githubpages"></a>1: 使用 Githubpages</h4><p>   比如我要上传<img src="http://upload-images.jianshu.io/upload_images/2377897-5b4113b7f687b1e5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>   按照如下四个步骤上传到名为:flexSupplement的仓库中</p>
<pre><code>git init (初始化本地仓库)
git add .  （将本地所有文件加到仓库里）
git commit -m &quot;message&quot; （设置提交信息）
git remote add origin   git@github.com:sunningcarryhaha/flexSupplement.git（本地仓库链接远程仓库）
git push -u origin master （push文件到仓库中）
</code></pre><p>上传成功后是这个效果<img src="" alt=""><br>重头戏来了哟！<br>我们现在点击这个html文件，出现的效果全是代码![]<img src="http://upload-images.jianshu.io/upload_images/2377897-933438f6e1551351.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">()，没有咱们想要的demo效果<br>此时呢，应该植入咱们github爸爸的一个好东西，那就是-githubPages</p>
<h5 id="第一步：找到Settings"><a href="#第一步：找到Settings" class="headerlink" title="第一步：找到Settings"></a>第一步：找到Settings</h5><pre><code>![](http://upload-images.jianshu.io/upload_images/2377897-0a301fa6cbc3d33f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)
</code></pre><h5 id="第二布：找到githubPages"><a href="#第二布：找到githubPages" class="headerlink" title="第二布：找到githubPages"></a>第二布：找到githubPages</h5><p><img src="http://upload-images.jianshu.io/upload_images/2377897-5033f61187c659c7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h5 id="第三步：预览githubPages"><a href="#第三步：预览githubPages" class="headerlink" title="第三步：预览githubPages"></a>第三步：预览githubPages</h5><p><img src="http://upload-images.jianshu.io/upload_images/2377897-794ba43a2fadab1d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>小胖友们看到这里一定会有疑问，预览到的是githubpages的效果，并不是你自己网页的效果，没关系，我下面为你们解答</p>
<h5 id="第四步：查看你的分支"><a href="#第四步：查看你的分支" class="headerlink" title="第四步：查看你的分支"></a>第四步：查看你的分支</h5><p><img src="http://upload-images.jianshu.io/upload_images/2377897-2fdf9314d74b1a05.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>注意：我们生成githubPages的目的就是需要生成一个gh-pages分支(咱们正常情况下只有一个master分支)</p>
<h5 id="第五步：将远程仓库克隆到本地"><a href="#第五步：将远程仓库克隆到本地" class="headerlink" title="第五步：将远程仓库克隆到本地"></a>第五步：将远程仓库克隆到本地</h5><p><pre><code><br>$ git clone git@github.com:sunningcarryhaha/flexSupplement.git<br></code></pre></p>
<h5 id="第六步：将分支切换到gh-Pages"><a href="#第六步：将分支切换到gh-Pages" class="headerlink" title="第六步：将分支切换到gh-Pages"></a>第六步：将分支切换到gh-Pages</h5><p><pre><code><br>  $ cd flexSupplement （进入到你克隆仓库的本地文件夹）<br>  $ git checkout gh-pages（将master分支切换到gh-pages分支上）</code></pre></p>
<p></p>
<h6 id="第七步：并重新上传到github上"><a href="#第七步：并重新上传到github上" class="headerlink" title="第七步：并重新上传到github上"></a>第七步：并重新上传到github上</h6><p>将本地克隆的文件删了，只留下.git,然后把你想要展示demo页面相关的文件粘进去<br>接着，执行以下语句</p>
<p><pre><code><br> git add . （将本地所有文件加到仓库里）<br> git commit -m “message” （设置提交信息）<br> git remote add origin git@github.com:sunningcarryhaha/flexSupplement.git（本地仓库链接远程仓库）<br> git push -u origin gh-pages （push文件到仓库中）<br></code></pre></p>
<h5 id="第八步：修改地址"><a href="#第八步：修改地址" class="headerlink" title="第八步：修改地址"></a>第八步：修改地址</h5><p>我的GithubPages地址是这个：<a href="http://carryguan.me/flex-add" target="_blank" rel="external">http://carryguan.me/flex-add</a><br>我要预览flex-add中的fb1.html<br>我最后预览的地址应该是这个：<a href="http://carryguan.me/flex-add/fb1.html" target="_blank" rel="external">http://carryguan.me/flex-add/fb1.html</a></p>
<h5 id="第九步：添加read-me"><a href="#第九步：添加read-me" class="headerlink" title="第九步：添加read.me"></a>第九步：添加read.me</h5><p>把地址放到read.me中</p>
<p><pre><code><br>  flex-add<br>  这是一个关于flexbox基础的骰子布局<br>  <a href="http://carryguan.me/flex-add/fb1.html" target="_blank" rel="external">demo</a><br></code></pre></p>
<h4 id="2-增加路径前缀（不建议用，会自动更改css的样式）"><a href="#2-增加路径前缀（不建议用，会自动更改css的样式）" class="headerlink" title="2: 增加路径前缀（不建议用，会自动更改css的样式）"></a>2: 增加路径前缀（不建议用，会自动更改css的样式）</h4><p>在地址前加<a href="http://htmlpreview.github.io/?" target="_blank" rel="external">http://htmlpreview.github.io/?</a>前缀（不建议用这个，会更改css样式）<br>例如，你想预览这个：<br><br><a href="">https://github.com/aisinvon/aisinvon.github.io/blob/master/index.html</a><br><br><br>你在这个地址前加<a href="http://htmlpreview.github.io/?" target="_blank" rel="external">http://htmlpreview.github.io/?</a><br><br><br>最后预览demo地址是：<br><a href="http://htmlpreview.github.io/?https://github.com/aisinvon/aisinvon.github.io/blob/master/index.html" target="_blank" rel="external">http://htmlpreview.github.io/?https://github.com/aisinvon/aisinvon.github.io/blob/master/index.html</a></p>
<hr>
<p> 博主感想</p>
<p>希望有更多小胖友提出宝贵意见,若有关于前端的问题，或者关于大学方面的感想可以私聊我(^~^)：</p>
<p><a href="https://github.com/sunningcarryhaha" target="_blank" rel="external">github</a><br><a href="https://www.zhihu.com/people/guan-kai-li-88" target="_blank" rel="external">知乎</a><br><a href="http://www.jianshu.com/users/0293a04839f0/latest_articles" target="_blank" rel="external">简书</a><br><a href="http://weibo.com/u/5048785433/home?wvr=5" target="_blank" rel="external">微博</a></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=28756834&auto=1&height=66"></iframe>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最详尽-hexo+GithubPages搭建博客]]></title>
      <url>http://carryguan.com/2016/07/02/hexo-gihubpages-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/005vGbJ7jw1f5ms460e6tj30zk0aqgn1.jpg" alt=""></p>
<ul>
<li>为什么选择hexo？</li>
<li>搭建博客的基本步骤</li>
<li>部署到Github Pages</li>
<li>域名解析<br>(原谅博主carry比较变态，在博文加了歌曲，不想听歌的小胖友们可以到博文底部关闭 )<br>图片无法加载可以点击<a href="http://www.jianshu.com/p/0321cb243963" target="_blank" rel="external">图片爸爸</a></li>
</ul>
<hr>
<h2 id="为什么选择hexo？"><a href="#为什么选择hexo？" class="headerlink" title="为什么选择hexo？"></a>为什么选择hexo？</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="external">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<hr>
<h2 id="搭建博客的基本步骤"><a href="#搭建博客的基本步骤" class="headerlink" title="搭建博客的基本步骤"></a>搭建博客的基本步骤</h2><ul>
<li>购买域名</li>
<li>安装hexo</li>
<li>注册github</li>
</ul>
<h3 id="一：购买域名"><a href="#一：购买域名" class="headerlink" title="一：购买域名"></a>一：购买域名</h3><p>   若小胖友们想把个人博客挂到属于自己的域名上，博主在这里建议大家提前把域名买好。<br>博主购买域名的地方是<a href="https://wanwang.aliyun.com/" target="_blank" rel="external">万网</a>,注册登录后，填写你想要的域名<br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/2377897-a9273887335cde2a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>选择完自己域名后，付费就可以了！<br>(博主建议个人域名选择.me为后缀的较好-博主的域名就为<a href="http://carryguan.me" target="_blank" rel="external">carryguan.me</a>)</p>
<h3 id="二：安装hexo"><a href="#二：安装hexo" class="headerlink" title="二：安装hexo"></a>二：安装hexo</h3><p>  装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：<br><a href="http://git-scm.com/" target="_blank" rel="external">Git</a><br><a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a></p>
<p> 若你是IT小白，安装git/node没成功,博主carry给你个福利贴士<br> (博主就是这样一点点过来的 （＃￣▽￣＃）)<br><a href="http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html" target="_blank" rel="external">windows安装git</a><br><a href="http://jingyan.baidu.com/article/b0b63dbfca599a4a483070a5.html" target="_blank" rel="external">windows安装node.js</a></p>
<blockquote>
<p>在这里建议小胖友们，先预习一下:<br>  <a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">git入门教程</a><br><a href="https://www.zhihu.com/question/20070065" target="_blank" rel="external">github趣味详解</a></p>
</blockquote>
<p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。<br>先进入一个文件夹路径：例如我的<img src="http://ww3.sinaimg.cn/large/005vGbJ7jw1f5fbuje1hjj30l50bd75k.jpg" alt=""><br>再执行下面的命令:</p>
<pre><code>npm install -g hexo-cli</code></pre> 

<h3 id="初始化框架"><a href="#初始化框架" class="headerlink" title="初始化框架"></a>初始化框架</h3><h4 id="1执行如下语句"><a href="#1执行如下语句" class="headerlink" title="1执行如下语句"></a>1执行如下语句</h4><pre><code> hexo init blog</code></pre>

<p> (blog是我自己建立的用来装博客的文件夹)</p>
<h4 id="2：再执行"><a href="#2：再执行" class="headerlink" title="2：再执行"></a>2：再执行</h4><pre><code>cd blog</code></pre> 



<h4 id="3-最后执行"><a href="#3-最后执行" class="headerlink" title="3: 最后执行"></a>3: 最后执行</h4><pre><code>npm install</code></pre> 

<p>以上三条语句执行完毕后， 你会在blog文件夹里看到如下:<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── _config.yml //网站的配置信息，您可以在此配置大部分的参数。 </span><br><span class="line">├── package.json </span><br><span class="line">├── scaffolds //模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。 </span><br><span class="line">├── source //资源文件夹是存放用户资源的地方。</span><br><span class="line"> | ├── _drafts</span><br><span class="line"> | └── _posts </span><br><span class="line">└── themes //主题文件夹。Hexo会根据主题来生成静态页面。</span><br></pre></td></tr></table></figure></p>
<h4 id="最后看看你自己的个人网站："><a href="#最后看看你自己的个人网站：" class="headerlink" title="最后看看你自己的个人网站："></a>最后看看你自己的个人网站：</h4><p>在blog目录下执行gitbash命令:</p>
<p>1：新建一篇文章（我的第一篇文章）</p>
<pre><code>
 hexo new "我的第一篇文章"
</code></pre> 

<p>会在/source/_post里自动生成了“我的第一篇文章.md”文件，之后新建的文章都将存放在此目录下。编辑“我的第一篇文章.md”文件可修改内容。</p>
<p>2：生成网站</p>
<pre><code> 
hexo generate (可简写成 hexo g)
</code></pre> 

<p>3:启动本地服务器</p>
<pre><code> 
 hexo server (可简写成 hexo s)
</code></pre> 


<p>4:在浏览器输入<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000</a> 即可查看网站。</p>
<h3 id="三：注册github"><a href="#三：注册github" class="headerlink" title="三：注册github"></a>三：注册github</h3><p><a href="https://github.com/" target="_blank" rel="external">github</a><br>填写完相应信息，注册成功后，重新登录，进入到这个页面<br><img src="http://ww2.sinaimg.cn/large/005vGbJ7jw1f5md7zebr5j30wp0gnq5f.jpg" alt=""><br>点击图片中所圈位置出现了如下：<br><img src="http://ww4.sinaimg.cn/large/005vGbJ7jw1f5mdn65brmj30ng0h0dh1.jpg" alt=""></p>
<blockquote>
<p>Repository name里填写:你的用户名.github.io<br>(例如我的用户名是<a href="https://github.com/sunningcarryhaha" target="_blank" rel="external">sunningcarryhaha</a>,所以我的Repository name:sunningcarryhaha.github.io)<br>Description里随便填一下你的描述就好<br>Public选中<br>选中Initilize this respository with a README<br>最后点击绿色按钮创建</p>
</blockquote>
<p><img src="http://ww4.sinaimg.cn/large/005vGbJ7jw1f5mdofjeuij30pv0k9tab.jpg" alt=""><br>创建成功后<br>配置SSH-Key<br><a href="http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html" target="_blank" rel="external">详细步骤请点击此文章</a></p>
<hr>
<h2 id="将blog部署到Github-Pages-上"><a href="#将blog部署到Github-Pages-上" class="headerlink" title="将blog部署到Github Pages 上"></a>将blog部署到Github Pages 上</h2><p><strong> 两种方法:</strong></p>
<ul>
<li>使用hexo deploy部署</li>
<li>使用git push 部署<h3 id="1：hexo-deploy部署"><a href="#1：hexo-deploy部署" class="headerlink" title="1：hexo deploy部署"></a>1：hexo deploy部署</h3><h4 id="配置deploy"><a href="#配置deploy" class="headerlink" title="配置deploy"></a>配置deploy</h4>找到blog目录下的配置文件_config.yml,用编辑器打开此文件<br>找到此文件中的deploy字段，按照以下配置<pre><code>deploy: 
 type: git 
 repo: git@github.com:sunningcarryhaha/sunningcarryhaha.github.io.git   
 branch: master
</code></pre><h4 id="注意需要提前安装一个扩展："><a href="#注意需要提前安装一个扩展：" class="headerlink" title="注意需要提前安装一个扩展："></a>注意需要提前安装一个扩展：</h4><pre><code>$ npm install hexo-deployer-git --save
</code></pre><h4 id="然后在命令行中执行"><a href="#然后在命令行中执行" class="headerlink" title="然后在命令行中执行"></a>然后在命令行中执行</h4><pre><code>hexo d
</code></pre><blockquote>
<p>不幸的是，上述命令虽然简单方便，但是偶尔会有莫名其妙的问题出现，因此，我们也可以追本溯源，使用git命令来完成部署的工作。</p>
</blockquote>
</li>
</ul>
<h3 id="2-使用gitbash，将public文件夹上传到自己的仓库中"><a href="#2-使用gitbash，将public文件夹上传到自己的仓库中" class="headerlink" title="2:使用gitbash，将public文件夹上传到自己的仓库中"></a>2:使用gitbash，将public文件夹上传到自己的仓库中</h3><h4 id="第一步：进入到你的blog目录"><a href="#第一步：进入到你的blog目录" class="headerlink" title="第一步：进入到你的blog目录"></a>第一步：进入到你的blog目录</h4><pre><code> 
 cd blog
</code></pre>

<h4 id="第二步-初始化博客"><a href="#第二步-初始化博客" class="headerlink" title="第二步 :初始化博客"></a>第二步 :初始化博客</h4><pre><code>
hexo g
</code></pre> 

<h4 id="第三步-把public文件夹上传到github仓库中"><a href="#第三步-把public文件夹上传到github仓库中" class="headerlink" title="第三步:把public文件夹上传到github仓库中"></a>第三步:把public文件夹上传到github仓库中</h4><pre><code> 
cd public
</code></pre> 

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init (初始化本地仓库)</span><br><span class="line">git add .  （将本地文件加到仓库里）</span><br><span class="line">git commit -m &quot;message&quot; （设置提交信息）</span><br><span class="line">git remote add origin git@github.com:sunningcarryhaha/sunningcarryhaha.github.io.git（本地仓库链接远程仓库）</span><br><span class="line">git push origin master （push文件到仓库中）</span><br></pre></td></tr></table></figure>
<blockquote>
<p>git@github.com:sunningcarryhaha/sunningcarryhaha.github.io.git<br>解释一下   ：<br>sunningcarryhaha是用户名<br>sunningcarryhaha.github.io是仓库名称<br>.git是后缀</p>
</blockquote>
<p>详细的步骤可参考此<br><a href="http://blog.csdn.net/steven6977/article/details/10567719" target="_blank" rel="external">github push</a><br><a href="http://blog.csdn.net/chaihuasong/article/details/37911723" target="_blank" rel="external">git github 问题总结</a></p>
<p>部署成功以后，在浏览器中输入你的repository名字：例如我的<a href="https://github.com/sunningcarryhaha" target="_blank" rel="external">sunningcarryhaha.github.io</a></p>
<h4 id="就可以看到你的网站了"><a href="#就可以看到你的网站了" class="headerlink" title="就可以看到你的网站了"></a>就可以看到你的网站了</h4><hr>
<h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><ul>
<li>进入万网进行域名绑定</li>
<li>进入public,新建CNAME</li>
<li>把域名写到CNAME里</li>
<li>传到github仓库里<h3 id="1-进入万网进行域名绑定"><a href="#1-进入万网进行域名绑定" class="headerlink" title="1:进入万网进行域名绑定"></a>1:进入万网进行域名绑定</h3><img src="http://ww4.sinaimg.cn/large/005vGbJ7jw1f5feoitevaj30ah0bit9r.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/005vGbJ7jw1f5fepmf432j31hb0jgthk.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/large/005vGbJ7jw1f5fer7xepxj319r0d2gpx.jpg" alt=""><br>安照以上图片进行操作<br><strong> 尤其注意:记录值那里填写的是:sunningcarryhaha.github.io.，也就是你的仓库名字后还有个”.”  </strong><br>以上进行完毕后，接着下一步</li>
</ul>
<h3 id="2-进入blog下的public文件夹-新建-CNAME"><a href="#2-进入blog下的public文件夹-新建-CNAME" class="headerlink" title="2:进入blog下的public文件夹,新建 CNAME"></a>2:进入blog下的public文件夹,新建 CNAME</h3><p><img src="http://ww4.sinaimg.cn/large/005vGbJ7jw1f5fe1tnb1pj30rt0h5q7d.jpg" alt=""><br><img src="http://ww4.sinaimg.cn/large/005vGbJ7jw1f5feuzv6ncj30ip0e5gn3.jpg" alt=""></p>
<h3 id="3-将public文件夹下的CNAME上传到github仓库中"><a href="#3-将public文件夹下的CNAME上传到github仓库中" class="headerlink" title="3:将public文件夹下的CNAME上传到github仓库中"></a>3:将public文件夹下的CNAME上传到github仓库中</h3><p> <img src="http://ww2.sinaimg.cn/large/005vGbJ7jw1f5feyzubl7j30l50bdq5p.jpg" alt=""><br>如果上传成功的话，进入到你的github仓库中会看到CNAME文件<br><img src="http://ww3.sinaimg.cn/large/005vGbJ7jw1f5ff5aey6gj30sj0ndn3i.jpg" alt=""></p>
<h3 id="4-为了防止域名解析出问题"><a href="#4-为了防止域名解析出问题" class="headerlink" title="4:为了防止域名解析出问题"></a>4:为了防止域名解析出问题</h3><p>博主建议将blog下的public下的CNAME文件，复制到blog下的source文件夹里，这样更新public，不会出现CNAME文件丢失的情况</p>
<hr>
<p>如果以上步骤都进行完毕的话，博主carry恭喜你:bowtie:,小胖友你zen棒，现在在浏览器输入你的域名，就可以成功的看到你的个人网站啦！<br>当然这个网站还可以换主题，美化！这方面的文章敬请期待，博主会继续出博文的!</p>
<hr>
<h2 id="博主感想"><a href="#博主感想" class="headerlink" title="博主感想"></a>博主感想</h2><p>这个博客博主搭建了好久，走了好多弯路(原谅博主比较笨，呜呜！)<br>期间出了好多问题，最根本的原因是博主git方面不基础不好,所以建议小胖友们多练习一下git<br>这里推荐:<br>     <a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">git入门教程</a><br>    <a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="external">node.js安装菜鸟教程</a><br>   <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">hexo官网</a><br><a href="http://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="external">markdown入门</a><br><a href="https://www.zhihu.com/question/24422335/answer/46357100" target="_blank" rel="external">hexo主题推荐</a><br><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">next-hexo主题</a><br><a href="http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" target="_blank" rel="external">hexo常见问题解决方案</a></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=3412579&auto=1&height=66"></iframe>
]]></content>
    </entry>
    
  
  
</search>
